/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.5.3 public/models/DodgeChallenger.glb 
*/

import React, { useRef, useEffect } from 'react'
import { useGLTF } from '@react-three/drei'
import { useFrame } from '@react-three/fiber'
import * as THREE from 'three'
import './DodgeChallenger.css'

const DodgeChallenger = ({ color = '#FFFFFF', ...props }) => {
  const { nodes, materials } = useGLTF('./models/DodgeChallenger.glb')
  
  // Create refs for each wheel
  const wheel1Ref = useRef()
  const wheel2Ref = useRef()
  const wheel3Ref = useRef()
  const wheel4Ref = useRef()
  
  // Create refs for body parts
  const bodyRef = useRef()
  const leftMirrorRef = useRef()
  const rightMirrorRef = useRef()
  const rightDoorRef = useRef()
  const leftDoorRef = useRef()  // Add reference for left door
  const roofRef = useRef()
  const trunkRef = useRef()

  // Animation for wheel rotation
  useFrame((state, delta) => {
    // Rotate wheels around their X axis (adjust rotation speed as needed)
    const rotationSpeed = -2
    if (wheel1Ref.current) wheel1Ref.current.rotation.x += delta * rotationSpeed
    if (wheel2Ref.current) wheel2Ref.current.rotation.x += delta * rotationSpeed
    if (wheel3Ref.current) wheel3Ref.current.rotation.x += delta * rotationSpeed
    if (wheel4Ref.current) wheel4Ref.current.rotation.x += delta * rotationSpeed
  })
  
  // Update car body color when color prop changes
  useEffect(() => {
    if (color) {
      const newColor = new THREE.Color(color)
      const bodyParts = [
        bodyRef.current,
        leftMirrorRef.current,
        rightMirrorRef.current,
        rightDoorRef.current,
        leftDoorRef.current,
        roofRef.current,
        trunkRef.current
      ]
      
      bodyParts.forEach(part => {
        if (part) {
          // Clone material if it hasn't been cloned yet
          if (!part.userData.originalMaterial) {
            part.userData.originalMaterial = part.material
            part.material = part.material.clone()
          }
          
          // Use gsap-like interpolation for smooth transition
          const startColor = part.material.color.clone()
          const endColor = newColor.clone()
          
          // Store the animation data on the part
          part.userData.colorAnimation = {
            startTime: Date.now(),
            duration: 500, // 0.5 seconds
            startColor,
            endColor
          }
        }
      })
    }
  }, [color])
  
  // Animate the color transition in useFrame
  useFrame(() => {
    const bodyParts = [
      bodyRef.current,
      leftMirrorRef.current,
      rightMirrorRef.current,
      rightDoorRef.current,
      leftDoorRef.current,
      roofRef.current,
      trunkRef.current
    ]
    
    bodyParts.forEach(part => {
      if (part && part.userData.colorAnimation) {
        const anim = part.userData.colorAnimation
        const now = Date.now()
        const elapsed = now - anim.startTime
        
        if (elapsed < anim.duration) {
          // Calculate progress (0 to 1)
          const progress = elapsed / anim.duration
          
          // Interpolate the color
          part.material.color.r = anim.startColor.r + (anim.endColor.r - anim.startColor.r) * progress
          part.material.color.g = anim.startColor.g + (anim.endColor.g - anim.startColor.g) * progress
          part.material.color.b = anim.startColor.b + (anim.endColor.b - anim.startColor.b) * progress
        } else {
          // Animation complete, set final color
          part.material.color.copy(anim.endColor)
          delete part.userData.colorAnimation
        }
      }
    })
  })

  return (
    <group {...props} dispose={null} position={[-3.8, 0.42, 0]} rotation={[0, Math.PI, 0]}>
      <mesh ref={bodyRef} geometry={nodes.the_main_body_.geometry} material={materials.body} position={[-3.887, 0.32, 0.157]} scale={0.238}>
        <mesh ref={trunkRef} geometry={nodes['back_-_carbon_'].geometry} material={materials.body} position={[-0.011, 1.178, 6.702]} />
        <mesh geometry={nodes['back_-_r_light'].geometry} material={materials['back light']} position={[-0.011, 0.375, 8.051]} />
        <mesh geometry={nodes['back_-_r_light001'].geometry} material={materials['transparent glass']} position={[-0.011, 0.375, 8.054]} />
        <mesh geometry={nodes.back_def.geometry} material={materials['rear bumber']} position={[-0.011, -1.737, 7.381]} />
        <mesh geometry={nodes.body_.geometry} material={materials.Meshpart24Mtl} position={[-0.011, -0.557, -5.422]} />
        <mesh geometry={nodes.body_001.geometry} material={materials['the wing ']} position={[-0.964, -0.366, -1.954]} />
        <mesh geometry={nodes.driver_door_key_.geometry} material={materials.Meshpart6Mtl} position={[-3.541, 0.549, 0.814]} />
        <group position={[-0.017, -0.229, -7.301]}>
          <mesh geometry={nodes.Object_9.geometry} material={materials.Meshpart2Mtl} />
          <mesh geometry={nodes.Object_9_1.geometry} material={materials['Material.002']} />
        </group>
        <mesh geometry={nodes.engine_box_.geometry} material={materials.Meshpart37Mtl} position={[0.094, 0.192, -7.28]} />
        <mesh geometry={nodes.front_def.geometry} material={materials['the wing ']} position={[-0.011, -2.135, -9.406]} />
        <mesh geometry={nodes.front_lights_.geometry} material={materials.Meshpart22Mtl} position={[-0.021, -0.239, -9.423]} />
        <mesh geometry={nodes.front_orange_light.geometry} material={materials.L2Mtl} position={[-0.011, -1.169, -8.863]} />
        <mesh geometry={nodes.hood_.geometry} material={materials['carbon fiber ']} position={[0.132, 0.651, -7.388]} />
        <mesh ref={leftMirrorRef} geometry={nodes.left_mirror_.geometry} material={materials.body} position={[-3.769, 0.99, -2.591]} />
        <mesh geometry={nodes.Logo018.geometry} material={nodes.Logo018.material} position={[0.001, 0.367, 8.116]} rotation={[1.42, 0.001, -0.006]} scale={[0.186, 0.149, 0.081]} />
        <mesh geometry={nodes['main_body_-_2'].geometry} material={materials.Meshpart24Mtl} position={[-0.022, -1.208, -3.467]} />
        <mesh geometry={nodes.Object.geometry} material={materials['air intake']} position={[0.388, 0.026, 1.926]} />
        <group position={[-3.34, 0.929, 4.737]} rotation={[-Math.PI, 0, -Math.PI]} scale={[3.922, 3.719, 3.719]}>
          <mesh geometry={nodes.Mesh006.geometry} material={materials['Material.011']} />
          <mesh geometry={nodes.Mesh006_1.geometry} material={materials['Material.012']} />
        </group>
        <mesh geometry={nodes.rear_air_exit_.geometry} material={materials.Meshpart15Mtl} position={[-0.011, -1.784, 7.348]} />
        <mesh ref={rightDoorRef} geometry={nodes.right_door_.geometry} material={materials.body} position={[-3.539, -0.482, -1.489]} />
        <group position={[3.516, -0.482, -1.487]}>
          <mesh ref={leftDoorRef} geometry={nodes.Object_10009.geometry} material={materials.body} />
          <mesh geometry={nodes.Object_10009_1.geometry} material={materials['the door locker']} />
        </group>
        <mesh ref={rightMirrorRef} geometry={nodes.right_mirror.geometry} material={materials.body} position={[3.746, 0.99, -2.591]} />
        <mesh geometry={nodes.srt_badge_.geometry} material={materials['Material.001']} position={[2.262, 1.071, 8.101]} rotation={[-0.141, 0.101, 0.045]} scale={-0.215} />
        <mesh geometry={nodes.tail_light_.geometry} material={materials['tail lights']} position={[-0.045, 0.368, 8.07]} />
        <group position={[-0.011, 1.112, 8.242]} rotation={[0.277, 0.001, 3.141]} scale={[-0.005, -0.005, -0.001]}>
          <mesh geometry={nodes.Sphere.geometry} material={materials['Material.006']} />
          <mesh geometry={nodes.Sphere_1.geometry} material={materials['Material.004']} />
          <mesh geometry={nodes.Sphere_2.geometry} material={materials['Material.005']} />
          <mesh geometry={nodes.Sphere_3.geometry} material={materials['Material.007']} />
          <mesh geometry={nodes.Sphere_4.geometry} material={materials['Meshpart16Mtl.001']} />
        </group>
        <mesh geometry={nodes.the_light_glass_cover_.geometry} material={materials.Meshpart24Mtl} position={[0, -0.036, -5.316]} />
        <mesh geometry={nodes.the_light_glass_cover_001.geometry} material={materials['Material.014']} position={[-0.011, -1.124, 8.282]} />
        <mesh geometry={nodes.the_light_glass_cover_002.geometry} material={materials['transparent glass']} position={[-0.052, -1.123, 8.326]} scale={[1, 0.986, 0.986]} />
        <mesh geometry={nodes.the_light_glass_cover_003.geometry} material={materials['back light']} position={[0, -0.036, -5.316]} />
        <mesh geometry={nodes.the_light_glass_cover_004.geometry} material={materials['transparent glass']} position={[0, -0.036, -5.307]} />
        <mesh geometry={nodes.the_mirrors_.geometry} material={materials.Meshpart22Mtl} position={[-0.029, 1.282, -2.454]} />
        <mesh ref={roofRef} geometry={nodes['top_-_carbon_'].geometry} material={materials.body} position={[-0.009, 2.481, 0.584]} />
        <mesh geometry={nodes.windows_glass.geometry} material={materials.Meshpart20Mtl} position={[-0.011, 1.559, -0.715]} />
        <mesh geometry={nodes.wing.geometry} material={materials['carbon fiber ']} position={[-0.011, 1.074, 7.933]} />
      </mesh>
      <mesh ref={wheel4Ref} geometry={nodes.wheel_4.geometry} material={materials.tire} position={[-4.599, -0.073, 1.202]} scale={[1.029, 0.992, 0.992]}>
        <group position={[-0.152, 0.229, 0]} rotation={[0.068, -0.001, 2.258]} scale={0.002}>
          <mesh geometry={nodes.Circle010.geometry} material={materials.Material} />
          <mesh geometry={nodes.Circle010_1.geometry} material={materials['Material.003']} />
        </group>
        <mesh geometry={nodes.Bolt021.geometry} material={materials.screws} position={[-0.122, -0.019, 0.057]} rotation={[1.885, 0, Math.PI / 2]} scale={0.004} />
        <mesh geometry={nodes.Bolt022.geometry} material={materials.screws} position={[-0.122, 0.049, 0.035]} rotation={[Math.PI / 5, 0, Math.PI / 2]} scale={0.004} />
        <mesh geometry={nodes.Bolt023.geometry} material={materials.screws} position={[-0.122, 0.049, -0.035]} rotation={[-Math.PI / 5, 0, Math.PI / 2]} scale={0.004} />
        <mesh geometry={nodes.Bolt024.geometry} material={materials.screws} position={[-0.122, -0.019, -0.057]} rotation={[-1.885, 0, Math.PI / 2]} scale={0.004} />
        <mesh geometry={nodes.Bolt025.geometry} material={materials.screws} position={[-0.122, -0.06, 0]} rotation={[-Math.PI, 0, Math.PI / 2]} scale={0.004} />
        <group position={[-0.081, 0, 0]} rotation={[-Math.PI, 0, -Math.PI]} scale={[1.101, 0.929, 0.929]}>
          <mesh geometry={nodes.Circle009.geometry} material={materials['brake caliper']} />
          <mesh geometry={nodes.Circle009_1.geometry} material={materials['caliper datail']} />
        </group>
        <mesh geometry={nodes.Logo011.geometry} material={materials['rim badge']} position={[-0.142, -0.226, 0]} rotation={[-Math.PI, 0, -Math.PI]} scale={[1.101, 0.929, 0.929]} />
        <mesh geometry={nodes.Rim005.geometry} material={materials['rim badge']} position={[-0.148, 0, 0]} rotation={[-Math.PI, 0, Math.PI / 2]} scale={[0.929, 1.101, 0.929]} />
        <mesh geometry={nodes.srt_badge_001.geometry} material={materials['Material.001']} position={[-0.151, -0.001, -0.002]} rotation={[-1.578, -1.16, -1.591]} scale={[-0.023, -0.023, -0.022]} />
        <mesh geometry={nodes.The_Rim005.geometry} material={materials.rim} position={[-0.042, 0, 0]} rotation={[-Math.PI / 5, 0, Math.PI / 2]} scale={[0.929, 1.101, 0.929]} />
      </mesh>
      <group position={[-4.677, -0.073, 1.338]} rotation={[-Math.PI, 0, -Math.PI]} scale={[1.029, 0.975, 0.975]}>
        <mesh geometry={nodes.Plane004.geometry} material={materials['The brake']} />
        <mesh geometry={nodes.Plane004_1.geometry} material={materials['brake badge']} />
      </group>
      <mesh ref={wheel3Ref} geometry={nodes.wheel_3.geometry} material={materials.tire} position={[-4.6, -0.075, -1.459]} scale={[1.022, 0.986, 0.986]}>
        <group position={[-0.152, 0.229, 0]} rotation={[0.068, -0.001, 2.258]} scale={0.002}>
          <mesh geometry={nodes.Circle015.geometry} material={materials.Material} />
          <mesh geometry={nodes.Circle015_1.geometry} material={materials['Material.003']} />
        </group>
        <mesh geometry={nodes.Bolt026.geometry} material={materials.screws} position={[-0.122, -0.019, 0.057]} rotation={[1.885, 0, Math.PI / 2]} scale={0.004} />
        <mesh geometry={nodes.Bolt027.geometry} material={materials.screws} position={[-0.122, 0.049, 0.035]} rotation={[Math.PI / 5, 0, Math.PI / 2]} scale={0.004} />
        <mesh geometry={nodes.Bolt028.geometry} material={materials.screws} position={[-0.122, 0.049, -0.035]} rotation={[-Math.PI / 5, 0, Math.PI / 2]} scale={0.004} />
        <mesh geometry={nodes.Bolt029.geometry} material={materials.screws} position={[-0.122, -0.019, -0.057]} rotation={[-1.885, 0, Math.PI / 2]} scale={0.004} />
        <mesh geometry={nodes.Bolt030.geometry} material={materials.screws} position={[-0.122, -0.06, 0]} rotation={[-Math.PI, 0, Math.PI / 2]} scale={0.004} />
        <group position={[-0.081, 0, 0]} rotation={[-Math.PI, 0, -Math.PI]} scale={[1.101, 0.929, 0.929]}>
          <mesh geometry={nodes.Circle014.geometry} material={materials['brake caliper']} />
          <mesh geometry={nodes.Circle014_1.geometry} material={materials['caliper datail']} />
        </group>
        <mesh geometry={nodes.Logo013.geometry} material={materials['rim badge']} position={[-0.142, -0.226, 0]} rotation={[-Math.PI, 0, -Math.PI]} scale={[1.101, 0.929, 0.929]} />
        <mesh geometry={nodes.Rim006.geometry} material={materials['rim badge']} position={[-0.148, 0, 0]} rotation={[-Math.PI, 0, Math.PI / 2]} scale={[0.929, 1.101, 0.929]} />
        <mesh geometry={nodes.srt_badge_002.geometry} material={materials['Material.001']} position={[-0.151, 0.001, -0.001]} rotation={[-1.578, -1.16, -1.591]} scale={[-0.023, -0.023, -0.022]} />
        <mesh geometry={nodes.The_Rim006.geometry} material={materials.rim} position={[-0.042, 0, 0]} rotation={[-Math.PI / 5, 0, Math.PI / 2]} scale={[0.929, 1.101, 0.929]} />
      </mesh>
      <group position={[-4.677, -0.075, -1.324]} rotation={[-Math.PI, 0, -Math.PI]} scale={[1.022, 0.969, 0.969]}>
        <mesh geometry={nodes.Plane006.geometry} material={materials['The brake']} />
        <mesh geometry={nodes.Plane006_1.geometry} material={materials['brake badge']} />
      </group>
      <mesh ref={wheel2Ref} geometry={nodes.wheel_2.geometry} material={materials.tire} position={[-3.174, -0.075, -1.459]} rotation={[-Math.PI, 0, -Math.PI]} scale={[1.022, 0.986, 0.986]}>
        <group position={[-0.152, 0.229, 0]} rotation={[0.068, -0.001, 2.258]} scale={0.002}>
          <mesh geometry={nodes.Circle020.geometry} material={materials.Material} />
          <mesh geometry={nodes.Circle020_1.geometry} material={materials['Material.003']} />
        </group>
        <mesh geometry={nodes.Bolt031.geometry} material={materials.screws} position={[-0.122, -0.019, 0.057]} rotation={[1.885, 0, Math.PI / 2]} scale={0.004} />
        <mesh geometry={nodes.Bolt032.geometry} material={materials.screws} position={[-0.122, 0.049, 0.035]} rotation={[Math.PI / 5, 0, Math.PI / 2]} scale={0.004} />
        <mesh geometry={nodes.Bolt033.geometry} material={materials.screws} position={[-0.122, 0.049, -0.035]} rotation={[-Math.PI / 5, 0, Math.PI / 2]} scale={0.004} />
        <mesh geometry={nodes.Bolt034.geometry} material={materials.screws} position={[-0.122, -0.019, -0.057]} rotation={[-1.885, 0, Math.PI / 2]} scale={0.004} />
        <mesh geometry={nodes.Bolt035.geometry} material={materials.screws} position={[-0.122, -0.06, 0]} rotation={[Math.PI, 0, Math.PI / 2]} scale={0.004} />
        <group position={[-0.081, 0, 0]} rotation={[Math.PI, 0, Math.PI]} scale={[1.101, 0.929, 0.929]}>
          <mesh geometry={nodes.Circle019.geometry} material={materials['brake caliper']} />
          <mesh geometry={nodes.Circle019_1.geometry} material={materials['caliper datail']} />
        </group>
        <mesh geometry={nodes.Logo015.geometry} material={materials['rim badge']} position={[-0.142, -0.226, 0]} rotation={[Math.PI, 0, Math.PI]} scale={[1.101, 0.929, 0.929]} />
        <mesh geometry={nodes.Rim007.geometry} material={materials['rim badge']} position={[-0.148, 0, 0]} rotation={[Math.PI, 0, Math.PI / 2]} scale={[0.929, 1.101, 0.929]} />
        <mesh geometry={nodes.srt_badge_003.geometry} material={materials['Material.001']} position={[-0.151, 0.001, -0.001]} rotation={[-1.564, -1.16, -1.551]} scale={[-0.023, -0.023, -0.022]} />
        <mesh geometry={nodes.The_Rim007.geometry} material={materials.rim} position={[-0.042, 0, 0]} rotation={[-Math.PI / 5, 0, Math.PI / 2]} scale={[0.929, 1.101, 0.929]} />
      </mesh>
      <group position={[-3.097, -0.075, -1.594]} scale={[1.022, 0.969, 0.969]}>
        <mesh geometry={nodes.Plane016.geometry} material={materials['The brake']} />
        <mesh geometry={nodes.Plane016_1.geometry} material={materials['brake badge']} />
      </group>
      <mesh ref={wheel1Ref} geometry={nodes.wheel_1.geometry} material={materials.tire} position={[-3.164, -0.073, 1.202]} rotation={[-Math.PI, 0, -Math.PI]} scale={[1.029, 0.992, 0.992]}>
        <group position={[-0.152, 0.229, 0]} rotation={[0.068, -0.001, 2.258]} scale={0.002}>
          <mesh geometry={nodes.Circle042.geometry} material={materials.Material} />
          <mesh geometry={nodes.Circle042_1.geometry} material={materials['Material.003']} />
        </group>
        <mesh geometry={nodes.Bolt036.geometry} material={materials.screws} position={[-0.122, -0.019, 0.057]} rotation={[1.885, 0, Math.PI / 2]} scale={0.004} />
        <mesh geometry={nodes.Bolt037.geometry} material={materials.screws} position={[-0.122, 0.049, 0.035]} rotation={[Math.PI / 5, 0, Math.PI / 2]} scale={0.004} />
        <mesh geometry={nodes.Bolt038.geometry} material={materials.screws} position={[-0.122, 0.049, -0.035]} rotation={[-Math.PI / 5, 0, Math.PI / 2]} scale={0.004} />
        <mesh geometry={nodes.Bolt039.geometry} material={materials.screws} position={[-0.122, -0.019, -0.057]} rotation={[-1.885, 0, Math.PI / 2]} scale={0.004} />
        <mesh geometry={nodes.Bolt040.geometry} material={materials.screws} position={[-0.122, -0.06, 0]} rotation={[Math.PI, 0, Math.PI / 2]} scale={0.004} />
        <group position={[-0.081, 0, 0]} rotation={[Math.PI, 0, Math.PI]} scale={[1.101, 0.929, 0.929]}>
          <mesh geometry={nodes.Circle041.geometry} material={materials['brake caliper']} />
          <mesh geometry={nodes.Circle041_1.geometry} material={materials['caliper datail']} />
        </group>
        <mesh geometry={nodes.Logo017.geometry} material={materials['rim badge']} position={[-0.142, -0.226, 0]} rotation={[Math.PI, 0, Math.PI]} scale={[1.101, 0.929, 0.929]} />
        <mesh geometry={nodes.Rim008.geometry} material={materials['Material.016']} position={[-0.148, 0, 0]} rotation={[Math.PI, 0, Math.PI / 2]} scale={[0.929, 1.101, 0.929]} />
        <mesh geometry={nodes.srt_badge_004.geometry} material={materials['Material.001']} position={[-0.151, -0.001, -0.002]} rotation={[-1.564, -1.16, -1.551]} scale={[-0.023, -0.023, -0.022]} />
        <mesh geometry={nodes.The_Rim008.geometry} material={materials.rim} position={[-0.042, 0, 0]} rotation={[-Math.PI / 5, 0, Math.PI / 2]} scale={[0.929, 1.101, 0.929]} />
      </mesh>
      <group position={[-3.087, -0.073, 1.066]} scale={[1.029, 0.975, 0.975]}>
        <mesh geometry={nodes.Plane020.geometry} material={materials['brake badge']} />
        <mesh geometry={nodes.Plane020_1.geometry} material={materials['The brake']} />
      </group>
    </group>
  )
}

useGLTF.preload('./models/DodgeChallenger.glb')

export default DodgeChallenger